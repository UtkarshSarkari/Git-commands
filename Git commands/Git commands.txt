git --version: displays git version.
git config --global user.name "Your name": commit your name to git.
git config --gloabl user.email "your email": commit your email to git.
git config --gloabl user.name: displays your committed name.
git config --global user.email: displays your committed email.
code .: open vs-code
git init: initialize an empty git repository
ls -lart: displays hidden files with details
ls -a: displays hidden files without details
touch filename.extension: creates an empty file in vs-code.
git add filename.extension: adds file to your git
git add -A: adds all the files to your git
git status: check the status of your added files if it's committed or not.
git commit: to commit your added files
   After pressing enter, an editor will get open !
   1. press insert and type your commit message
   2. press ':' then 'w' and then 'q'
   3. press enter
git commit -m "your commit message": if you dont want to go though the above editor steps.
git checkout filename.extension: match your file with the last committed data if it is modified by mistake.
git checkout -f: match all your files to your last commit.
git log: displays what you have committed yet.
git log -p -number: if you want to see your last "number" commits 
   e.g git log -p -3: displays your last three commits.
git diff: displays what have you modified in your file
git rm --cached filename.extension: delete file from git staging area but file wil still be available in hard disk.
git rm filename.extension: delete file from git staging area as well as from hard disk.
touch .gitignore: code with harry--git and github tutorial--39:00
git branch branchname: to create a branch
git checkout branchname: to get into created branch
git merge branchname: merges your branch content in master content.
git checkout -b branchname: to create and get into that branch.